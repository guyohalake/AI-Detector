{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Razak atl\\\\Desktop\\\\GPT-Detector\\\\src\\\\components\\\\Form.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport styles from \"./Form.module.css\";\nimport Loader from \"./Loader\";\nimport Card from \"../global/Card\";\nimport Output from \"./Output\";\n// const API_KEY = \"\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"YOUR_API_KEY\";\nconst Form = () => {\n  _s();\n  const text = useRef();\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [outputState, setOutputState] = useState(false);\n  const [output, setOutput] = useState();\n  const submitHander = event => {\n    event.preventDefault();\n    if (!text.current.value) {\n      setError({\n        message: \"Please enter a text\"\n      });\n      window.scrollTo(0, 0);\n      return;\n    }\n    setIsLoading(true);\n    setOutputState(true);\n    let apiMessage = {\n      role: \"user\",\n      content: `${text.current.value}.Is above paragraph written by chatgpt or gpt-3 or human?Give one word answer (make the first letter capitalize)`\n    };\n    const apiRequestBody = {\n      model: \"gpt-3.5-turbo\",\n      messages: [apiMessage]\n    };\n    fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + API_KEY,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(apiRequestBody)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Something went wrong, Please try again later!\");\n      }\n      return response.json();\n    }).then(response => {\n      setIsLoading(false);\n      console.log(response);\n      setOutput(\"This text is generated by \" + response.choices[0].message.content);\n      // console.log(response.choices[0].message.content);\n    }).catch(error => {\n      window.scrollTo(0, 0);\n      setIsLoading(false);\n      setOutputState(false);\n      setError(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHander,\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: styles.textarea,\n      ref: text,\n      placeholder: \"Enter text to check for AI and ChatGPT Plagiarism\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.alert,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Error!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), \" \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.closebtn,\n        onClick: () => setError(\"\"),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      disabled: isLoading,\n      children: \"Detect Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), outputState && /*#__PURE__*/_jsxDEV(Card, {\n      children: [isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this), !isLoading && output && /*#__PURE__*/_jsxDEV(Output, {\n        output: output,\n        text: text.current.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"OVi8yEyW/TZ2xPf16nKJBA5gpLg=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useRef","useState","styles","Loader","Card","Output","jsxDEV","_jsxDEV","API_KEY","Form","_s","text","error","setError","isLoading","setIsLoading","outputState","setOutputState","output","setOutput","submitHander","event","preventDefault","current","value","message","window","scrollTo","apiMessage","role","content","apiRequestBody","model","messages","fetch","method","headers","Authorization","body","JSON","stringify","then","response","ok","Error","json","console","log","choices","catch","onSubmit","className","form","children","textarea","ref","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","alert","closebtn","onClick","button","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Razak atl/Desktop/GPT-Detector/src/components/Form.js"],"sourcesContent":["import { useRef, useState } from \"react\";\r\nimport styles from \"./Form.module.css\";\r\nimport Loader from \"./Loader\";\r\nimport Card from \"../global/Card\";\r\nimport Output from \"./Output\";\r\n// const API_KEY = \"\";\r\nconst API_KEY = \"YOUR_API_KEY\";\r\nconst Form = () => {\r\n  const text = useRef();\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [outputState, setOutputState] = useState(false);\r\n  const [output, setOutput] = useState();\r\n\r\n  const submitHander = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!text.current.value) {\r\n      setError({ message: \"Please enter a text\" });\r\n      window.scrollTo(0, 0);\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    setOutputState(true);\r\n    let apiMessage = {\r\n      role: \"user\",\r\n      content: `${text.current.value}.Is above paragraph written by chatgpt or gpt-3 or human?Give one word answer (make the first letter capitalize)`,\r\n    };\r\n    const apiRequestBody = {\r\n      model: \"gpt-3.5-turbo\",\r\n      messages: [apiMessage],\r\n    };\r\n    fetch(\"https://api.openai.com/v1/chat/completions\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + API_KEY,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(apiRequestBody),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Something went wrong, Please try again later!\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((response) => {\r\n        setIsLoading(false);\r\n        console.log(response);\r\n        setOutput(\r\n          \"This text is generated by \" + response.choices[0].message.content\r\n        );\r\n        // console.log(response.choices[0].message.content);\r\n      })\r\n      .catch((error) => {\r\n        window.scrollTo(0, 0);\r\n        setIsLoading(false);\r\n        setOutputState(false);\r\n        setError(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHander} className={styles.form}>\r\n      <textarea\r\n        className={styles.textarea}\r\n        ref={text}\r\n        placeholder=\"Enter text to check for AI and ChatGPT Plagiarism\"\r\n      ></textarea>\r\n      {error && (\r\n        <div className={styles.alert}>\r\n          <span>\r\n            <strong>Error!</strong> {error.message}\r\n          </span>\r\n          <span className={styles.closebtn} onClick={() => setError(\"\")}>\r\n            &times;\r\n          </span>\r\n        </div>\r\n      )}\r\n      <button className={styles.button} disabled={isLoading}>\r\n        Detect Text\r\n      </button>\r\n      {outputState && (\r\n        <Card>\r\n          {isLoading && <Loader />}\r\n          {!isLoading && output && (\r\n            <Output output={output} text={text.current.value} />\r\n          )}\r\n        </Card>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}