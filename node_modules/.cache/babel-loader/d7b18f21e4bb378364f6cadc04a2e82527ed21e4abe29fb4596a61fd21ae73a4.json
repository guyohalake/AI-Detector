{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Razak atl\\\\Desktop\\\\GPT-Detector\\\\src\\\\components\\\\Output.js\";\nimport styles from \"./Output.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Output(props) {\n  const char = props.text.length;\n  const words = props.text.split(\" \").length;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [words <= 20 && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"**Please add more text for a more accurate result**\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.flexbox,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [char, \" Characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [words, \" Words\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = Output;\nexport default Output;\nvar _c;\n$RefreshReg$(_c, \"Output\");","map":{"version":3,"names":["styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Output","props","char","text","length","words","split","children","fileName","_jsxFileName","lineNumber","columnNumber","output","className","flexbox","_c","$RefreshReg$"],"sources":["C:/Users/Razak atl/Desktop/GPT-Detector/src/components/Output.js"],"sourcesContent":["import styles from \"./Output.module.css\";\r\nfunction Output(props) {\r\n  const char = props.text.length;\r\n  const words = props.text.split(\" \").length;\r\n  return (\r\n    <>\r\n      {words <= 20 && (\r\n        <h3>**Please add more text for a more accurate result**</h3>\r\n      )}\r\n      <h2>{props.output}</h2>\r\n      <div className={styles.flexbox}>\r\n        <h4>{char} Characters</h4>\r\n        <h4>{words} Words</h4>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Output;\r\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACzC,SAASC,MAAMA,CAACC,KAAK,EAAE;EACrB,MAAMC,IAAI,GAAGD,KAAK,CAACE,IAAI,CAACC,MAAM;EAC9B,MAAMC,KAAK,GAAGJ,KAAK,CAACE,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC,CAACF,MAAM;EAC1C,oBACEP,OAAA,CAAAE,SAAA;IAAAQ,QAAA,GACGF,KAAK,IAAI,EAAE,iBACVR,OAAA;MAAAU,QAAA,EAAI;IAAmD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAC5D,eACDd,OAAA;MAAAU,QAAA,EAAKN,KAAK,CAACW;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBd,OAAA;MAAKgB,SAAS,EAAElB,MAAM,CAACmB,OAAQ;MAAAP,QAAA,gBAC7BV,OAAA;QAAAU,QAAA,GAAKL,IAAI,EAAC,aAAW;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1Bd,OAAA;QAAAU,QAAA,GAAKF,KAAK,EAAC,QAAM;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA,eACN,CAAC;AAEP;AAACI,EAAA,GAfQf,MAAM;AAgBf,eAAeA,MAAM;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}